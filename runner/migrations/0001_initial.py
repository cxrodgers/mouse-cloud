# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-27 02:57
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArduinoProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('path', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('has_side_HE_sensor', models.BooleanField()),
                ('l_ir_detector_thresh', models.IntegerField(blank=True, null=True)),
                ('r_ir_detector_thresh', models.IntegerField(blank=True, null=True)),
                ('use_ir_detector', models.NullBooleanField()),
                ('stepper_driver', models.CharField(blank=True, max_length=10, null=True)),
                ('side_HE_sensor_thresh', models.CharField(blank=True, max_length=10, null=True)),
                ('microstep', models.CharField(blank=True, max_length=10, null=True)),
                ('invert_stepper_direction', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('l_reward_duration', models.IntegerField()),
                ('r_reward_duration', models.IntegerField(blank=True, null=True)),
                ('serial_port', models.CharField(max_length=20)),
                ('video_device', models.CharField(blank=True, max_length=20, null=True)),
                ('video_window_position_x', models.IntegerField(blank=True, null=True)),
                ('video_window_position_y', models.IntegerField(blank=True, null=True)),
                ('gui_window_position_x', models.IntegerField(blank=True, null=True)),
                ('gui_window_position_y', models.IntegerField(blank=True, null=True)),
                ('window_position_IR_plot_x', models.IntegerField(blank=True, null=True)),
                ('window_position_IR_plot_y', models.IntegerField(blank=True, null=True)),
                ('subprocess_window_ypos', models.IntegerField(blank=True, null=True)),
                ('video_brightness', models.IntegerField(blank=True, null=True)),
                ('video_gain', models.IntegerField(blank=True, null=True)),
                ('video_exposure', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Mouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('stimulus_set', models.CharField(max_length=50)),
                ('step_first_rotation', models.IntegerField()),
                ('timeout', models.IntegerField(blank=True, null=True)),
                ('scheduler', models.CharField(max_length=50)),
                ('max_rewards_per_trial', models.IntegerField(default=1)),
                ('protocol_name', models.CharField(max_length=50)),
                ('script_name', models.CharField(max_length=50)),
                ('default_board', models.CharField(blank=True, max_length=50, null=True)),
                ('default_box', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PythonProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('path', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('name', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('logfile', models.CharField(max_length=200)),
                ('serial_port', models.CharField(blank=True, max_length=50, null=True)),
                ('autosketch_path', models.CharField(max_length=200)),
                ('script_path', models.CharField(max_length=200)),
                ('sandbox', models.CharField(max_length=200)),
                ('python_param_scheduler_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Scheduler')),
                ('python_param_stimulus_set', models.CharField(blank=True, max_length=100, null=True, verbose_name='StimSet')),
                ('irl_param_stimulus_arm', models.CharField(blank=True, max_length=100, null=True, verbose_name='StimArm')),
                ('date_time_start', models.DateTimeField(blank=True, null=True, verbose_name='Start')),
                ('date_time_stop', models.DateTimeField(blank=True, null=True, verbose_name='Stop')),
                ('user_data_water_pipe_position_start', models.FloatField(blank=True, null=True, verbose_name='Pipe Start')),
                ('user_data_water_pipe_position_stop', models.FloatField(blank=True, null=True, verbose_name='Pipe Stop')),
                ('user_data_left_water_consumption', models.FloatField(blank=True, null=True)),
                ('user_data_right_water_consumption', models.FloatField(blank=True, null=True)),
                ('user_data_left_valve_mean', models.FloatField(blank=True, null=True)),
                ('user_data_right_valve_mean', models.FloatField(blank=True, null=True)),
                ('user_data_left_perf', models.FloatField(blank=True, null=True, verbose_name='L perf')),
                ('user_data_right_perf', models.FloatField(blank=True, null=True, verbose_name='R perf')),
                ('user_data_bias_summary', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bias')),
                ('user_data_weight', models.FloatField(blank=True, null=True, verbose_name='Weight')),
                ('board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='runner.Board')),
                ('box', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='runner.Box')),
                ('mouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runner.Mouse')),
            ],
        ),
    ]
